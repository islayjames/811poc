#!/bin/bash

# Development Startup Script for Texas 811 Backend Processing System
# This script starts both frontend and backend services
# Generated by Agent OS to prevent setup amnesia

set -e  # Exit on error

echo "üöÄ Starting Texas 811 Backend Processing System Development Environment"
echo "=================================================="

# Load environment variables
if [ -f .env ]; then
    echo "üìã Loading backend environment from .env"
    export $(grep -v '^#' .env | xargs)
fi

if [ -f .env.local ]; then
    echo "üìã Loading frontend environment from .env.local"
    export $(grep -v '^#' .env.local | xargs)
fi

# Get ports from environment or use defaults
BACKEND_PORT=${API_PORT:-${PORT:-8000}}
FRONTEND_PORT=${PORT:-3000}

# Backend startup
echo ""
echo "üì° Starting Backend Server on port $BACKEND_PORT..."
cd backend 2>/dev/null || echo "Backend directory not found - will be created during implementation"

if [ -d . ] && [ -f requirements.txt ]; then
    source .venv/bin/activate || uv venv && source .venv/bin/activate
    uv pip install -r requirements.txt
    uvicorn app.main:app --reload --port $BACKEND_PORT &
else
    echo "‚ö†Ô∏è  Backend not yet implemented - skipping backend startup"
fi

# Frontend startup  
echo ""
echo "üé® Starting Frontend Server on port $FRONTEND_PORT..."
cd ../frontend 2>/dev/null || cd .. 2>/dev/null || echo "Frontend directory not found - will be created during implementation"

if [ -d . ] && [ -f package.json ]; then
    npm install
    npm run dev &
else
    echo "‚ö†Ô∏è  Frontend not yet implemented - skipping frontend startup"
fi

echo ""
echo "‚úÖ Development servers will start when implemented!"
echo "   Frontend: http://localhost:$FRONTEND_PORT"
echo "   Backend:  http://localhost:$BACKEND_PORT"
echo ""
echo "Press Ctrl+C to stop all services"
wait